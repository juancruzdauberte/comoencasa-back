components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Access Token obtenido después del login con Google
    cookieAuth:
      type: apiKey
      in: cookie
      name: refreshToken
      description: Refresh Token almacenado en cookie httpOnly

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Mensaje de error descriptivo
        statusCode:
          type: number
          description: Código de estado HTTP

    Product:
      type: object
      properties:
        id:
          type: integer
          description: ID único del producto
          example: 1
        nombre:
          type: string
          description: Nombre del producto
          example: Empanada de Carne
        categoria_id:
          type: integer
          description: ID de la categoría a la que pertenece
          example: 1
        categoria:
          type: string
          description: Nombre de la categoría
          example: Empanadas

    Category:
      type: object
      properties:
        id:
          type: integer
          description: ID único de la categoría
          example: 1
        nombre:
          type: string
          description: Nombre de la categoría
          example: Empanadas
        productos:
          type: array
          description: Lista de productos en esta categoría
          items:
            $ref: '#/components/schemas/Product'

    OrderProduct:
      type: object
      required: [producto_id, cantidad]
      properties:
        producto_id:
          type: integer
          description: ID del producto
          example: 1
        cantidad:
          type: integer
          minimum: 1
          description: Cantidad del producto
          example: 12

    OrderProductDetail:
      type: object
      properties:
        producto_id:
          type: integer
          description: ID del producto
          example: 1
        nombre:
          type: string
          description: Nombre del producto
          example: Empanada de Carne
        cantidad:
          type: integer
          description: Cantidad en el pedido
          example: 12
        categoria:
          type: string
          description: Categoría del producto
          example: Empanadas

    Order:
      type: object
      properties:
        id:
          type: integer
          description: ID único del pedido
          example: 1
        domicilio:
          type: string
          description: Dirección de entrega
          example: Av. Siempre Viva 123
        nombre_cliente:
          type: string
          description: Nombre del cliente
          example: Juan
        apellido_cliente:
          type: string
          description: Apellido del cliente
          example: Pérez
        telefono_cliente:
          type: string
          description: Teléfono del cliente
          example: +5491123456789
        fecha_pedido:
          type: string
          format: date-time
          description: Fecha y hora en que se creó el pedido
          example: 2024-01-15T14:30:00Z
        hora_entrega:
          type: string
          format: time
          nullable: true
          description: Hora estimada de entrega
          example: '18:30'
        estado:
          type: string
          enum: [preparando, listo, entregado, cancelado]
          description: Estado actual del pedido
          example: preparando
        monto_pago:
          type: number
          format: float
          nullable: true
          description: Monto total del pedido
          example: 5400.50
        fecha_pago:
          type: string
          format: date-time
          nullable: true
          description: Fecha en que se pagó el pedido
          example: 2024-01-15T19:00:00Z
        metodo_pago:
          type: string
          enum: [efectivo, transferencia]
          nullable: true
          description: Método de pago utilizado
          example: transferencia
        observacion:
          type: string
          nullable: true
          description: Observaciones o comentarios adicionales
          example: Sin cebolla
        productos:
          type: array
          description: Lista de productos en el pedido
          items:
            $ref: '#/components/schemas/OrderProductDetail'

  responses:
    UnauthorizedError:
      description: Token de acceso inválido, expirado o no proporcionado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Token no válido
            statusCode: 401

    ForbiddenError:
      description: No tienes permisos suficientes para acceder a este recurso
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Acceso denegado
            statusCode: 403

    NotFoundError:
      description: El recurso solicitado no fue encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Recurso no encontrado
            statusCode: 404

    BadRequestError:
      description: La solicitud contiene datos inválidos o incompletos
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Datos inválidos
            statusCode: 400